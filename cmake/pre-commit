#!/bin/bash
# stage 1 pre-commit - called right after a cmake configure
set -e
WORK_DIR=./build
CONDA=.miniconda/bin/conda

cd ${WORK_DIR}
if [ ! -f ${CONDA} ] # conda executable in miniconda enviroment missing
then
	if [ ! -f Miniconda3-latest-Linux-x86_64.sh ]
	then # Have to download Miniconda3
		curl -C - -o Miniconda3-latest-Linux-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
		chmod +x Miniconda3-latest-Linux-x86_64.sh
	fi
	#Install Miniconda3, pre-commit and other tools
	./Miniconda3-latest-Linux-x86_64.sh -b -f -p .miniconda
	${CONDA} run pip install pre-commit inquirer
	${CONDA} run conda install -c conda-forge uncrustify git
fi

# Let pre-commit generate its hook (stage 3)
${CONDA} run pre-commit install -f --install-hooks
${CONDA} run pre-commit install --hook-type commit-msg

# Move stage 3 at pre-commit.py
mv ../.git/hooks/pre-commit ../.git/hooks/pre-commit.py # Move generated pre-commit

# Create stage 2 hook, wrap/run stage 3 inside conda
cat << EOF > ../.git/hooks/pre-commit
#!/bin/bash
${WORK_DIR}/${CONDA} run python .git/hooks/pre-commit.py
EOF

# Make stage 2 executable
chmod +x ../.git/hooks/pre-commit

# This time have to call stage 2 explicitly
cd ..
.git/hooks/pre-commit
