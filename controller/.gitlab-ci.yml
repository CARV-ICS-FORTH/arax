image: carvicsforth/arch_carv

stages:
  - style
  - publish
  - trigger

variables:
  ARAX_BRANCH:
    value: ${CI_BUILD_REF_NAME}
    description: Arax branch to use

controller_style_check:
  stage: controller_style
  script:
    - find ./ \( -name '*.c' -o -name '*.cpp' -o -name '*.h' \) -exec clang-format -i '{}' \;
    - git status
    - git diff --exit-code --quiet

controller_publish_docker:
  stage: controller_publish
  needs: [publish_docker]
  variables:
      BUILDAH_LAYERS: "true"
      DEVEL_TAG: "${DOCK_HOST}/${CI_PROJECT_NAMESPACE}/araxcontroller-devel:${CI_BUILD_REF_NAME}"
      RUNTIME_TAG: "${DOCK_HOST}/${CI_PROJECT_NAMESPACE}/araxcontroller-runtime:${CI_BUILD_REF_NAME}"
      INSTALL_TAG: "${DOCK_HOST}/${CI_PROJECT_NAMESPACE}/araxcontroller-install:${CI_BUILD_REF_NAME}"
  needs: []
  script:
    - sed -i "s/ARAX_BRANCH/${CI_BUILD_REF_NAME}/g" docker/Dockerfile
    - echo "${DOCK_PASS}" | buildah login -u "${DOCK_USER}" --password-stdin ${DOCK_HOST}
    - buildah build --target araxcontroller-devel -t ${DEVEL_TAG} --volume '/usr/lib/libcuda.so:/usr/lib/libcuda.so' -f ./docker/Dockerfile .
    - buildah build --target araxcontroller-runtime -t ${RUNTIME_TAG} --volume '/usr/lib/libcuda.so:/usr/lib/libcuda.so' -f ./docker/Dockerfile .
    - buildah build --target araxcontroller-install -t ${INSTALL_TAG} --volume '/usr/lib/libcuda.so:/usr/lib/libcuda.so' -f ./docker/Dockerfile .
    - buildah push -q ${DEVEL_TAG}
    - buildah push -q ${RUNTIME_TAG}
    - buildah push -q ${INSTALL_TAG}
    - buildah rm -a
    - buildah rmi -a

trigger_autotalk:
  stage: trigger
  needs: [controller_publish_docker]
  trigger:
    project: accelerators/auto_talk
    branch: ${CI_BUILD_REF_NAME}

trigger_cufft:
  stage: trigger
  needs: [controller_publish_docker]
  trigger:
    project: accelerators/arax_fft
    branch: ${CI_BUILD_REF_NAME}
